apply plugin: 'com.android.application'
//needed for dagger source code generation
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'checkstyle'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'me.tatarka.retrolambda'

checkstyle {
    toolVersion = "7.1"
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'me.tatarka:gradle-retrolambda:3.5.0'
    }
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // The Fabric Gradle plugin uses an open ended version to react
        // quickly to Android tooling updates
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    compile files('libs/YouTubeAndroidPlayerApi.jar')
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.google.android.apps.miyagi.development"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 332
        versionName "0.9.160"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        //TODO change key for release version
        releaseConfig {
            storeFile file('/Users/carl.lewis/Documents/AndroidWorkSpace/gapp-miyagi-android/build/flashmobDebug.keystore')
            File passwordFile = file("/Users/carl.lewis/Documents/AndroidWorkSpace/gapp-miyagi-android/build/debugKeypass.properties")
            String content = passwordFile.getText('UTF-8')
            storePassword(content)
            keyAlias "flashmobAlias"
            keyPassword(content)
        }
        debugConfig {
            storeFile file('/Users/carl.lewis/Documents/AndroidWorkSpace/gapp-miyagi-android/build/flashmobDebug.keystore')
            File passwordFile = file("/Users/carl.lewis/Documents/AndroidWorkSpace/gapp-miyagi-android/build/debugKeypass.properties")
            String content = passwordFile.getText('UTF-8')
            storePassword(content)
            keyAlias "flashmobAlias"
            keyPassword(content)
        }
    }

    lintOptions {
        lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")
        // file to write report to (if not specified, defaults to lint-results.xml)
        xmlOutput file("$project.buildDir/reports/lint/lint-report.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-report.html")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debugConfig
            if (project.hasProperty('fabric_emails')) {
                ext.betaDistributionEmails = "$fabric_emails"
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debugConfig
            if (project.hasProperty('fabric_emails')) {
                ext.betaDistributionEmails = "$fabric_emails"
            }
        }
    }

    productFlavors {
        mobile {
            versionNameSuffix "M"
        }
        tablet {
            versionNameSuffix "T"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task checkstyle(type: Checkstyle) {
    description 'Runs Checkstyle inspection against Android sourcesets.'
    group = 'verification'
    configFile file("${project.rootDir}/config/quality/checkstyle/googleStyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        xml.destination "$project.buildDir/reports/checkstyle/checkstyle-report.xml"
    }
    classpath = files()
}
check.dependsOn('checkstyle')

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:cardview-v7:25.2.0'
    testCompile 'junit:junit:4.12'
    //Image loader
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    //Retrofit - HTTP Client
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    //RxJava adapter for Retrofit
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.6'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    // dagger 2 - dependency injection
    apt 'com.google.dagger:dagger-compiler:2.7'
    compile 'com.google.dagger:dagger:2.7'
    // FlexibleAdapter - adapter for RecyclerView
    compile 'eu.davidea:flexible-adapter:5.0.0-SNAPSHOT'
    //MaterialProgressBar
    compile 'me.zhanghai.android.materialprogressbar:library:1.3.0'
    //Material Edit Text
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    //firebase
    compile 'com.google.firebase:firebase-core:10.2.0'
    compile 'com.google.firebase:firebase-auth:10.2.0'
    compile 'com.google.firebase:firebase-messaging:10.2.0'
    compile 'com.google.android.gms:play-services-auth:10.2.0'
    // Google tag manager
    compile 'com.google.android.gms:play-services-tagmanager:10.2.0'
    // Typekit - wrapper for changing default font
    compile 'com.tsengvn:typekit:1.0.1'
    // ButterKnife
    compile 'com.jakewharton:butterknife:8.5.1'
    apt 'com.jakewharton:butterknife-compiler:8.5.1'
    // Parceler
    compile 'org.parceler:parceler-api:1.1.6'
    apt 'org.parceler:parceler:1.1.6'
    compile 'com.android.support:multidex:1.0.1'
}

buildscript {
    repositories {
        jcenter()
        maven { url = "http://dl.bintray.com/davideas/maven" }
    }
}
// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'